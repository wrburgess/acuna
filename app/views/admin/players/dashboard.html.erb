<%= render Admin::HeaderForIndex::Component.new(
  instance: @instance, 
  controller: params[:controller], 
  action: params[:action], 
  new_button: true, 
  collection_export_xlsx_button: true, 
  show_filtering: true,
  search_box: true) 
%>

<%= render Admin::PageContainer::Component.new do %> 
  <!-- Player Context Filter Navigation -->
  <%= render partial: "filter_player_type", locals: { params: params, player_type: @player_type } %>

  <!-- Level Filter Navigation -->
  <%= render partial: "filter_levels", locals: { params: params, levels: @levels } %>

  <!-- Status Filter Navigation -->
  <%= render partial: "filter_statuses", locals: { params: params, statuses: @statuses } %>

  <!-- Position Filter Navigation -->
  <%= render partial: "filter_positions", locals: { params: params, positions: @positions } %>

  <!-- Roster Filter Navigation -->
  <%= render partial: "filter_rosters", locals: { params: params, rosters: @rosters } %>

  <!-- Tracking List Filter Navigation -->
  <%= render partial: "filter_tracking_lists", locals: { params: params, tracking_lists: @tracking_lists } %>

  <!-- Timeline Select Navigation -->
  <%= render partial: "select_timelines", locals: { params: params, timelines: @timelines } %>

  <!-- View Select Navigation -->
  <%= render partial: "select_views", locals: { params: params } %>

  <%= render Admin::TableForIndex::Component.new(data: @instances) do |table| %>
    <% table.with_column("Track") do |instance| %>
      <% current_user.tracking_lists.each do |tracking_list| %>
        <% is_tracked = instance.aggregated_tracking_list_ids.include?(tracking_list.id) %>
        <%= render Admin::TrackingListButton::Component.new(instance:, tracking_list:, is_tracked:) %>
      <% end %>
    <% end %>
    <% table.with_column(sort_link([:admin, @q], :last_name_cont, "Player", default_order: :asc)) { |instance| link_to(instance.full_description, profile_admin_player_path(id: instance.player_id)) } %>
    <% table.with_column(sort_link([:admin, @q], :roster_abbreviation, "ROS")) { |instance| instance.roster&.abbreviation } %>
    <% table.with_column(sort_link([:admin, @q], :player_level_weight, "LEVEL")) { |instance| instance.level&.abbreviation } %>
    <% table.with_column(sort_link([:admin, @q], :player_status_weight, "STATUS")) { |instance| instance.status&.abbreviation } %>
    <% table.with_column(sort_link([:admin, @q], :birthdate, "AGE")) { |instance| years_until_today(instance.birthdate) } %>

    <% if params[:player_type] == "batter" %>
      <% if params[:view] == "scoring" %>
        <% table.with_column(sort_link([:admin, @q], :bat_ops, "OPS")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_hrs, "HR")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_runs, "R")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_rbi, "RBI")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_nsb, "NSB")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_errors, "E")) { |instance| format_stat(instance.bat_ops, :hundreths) } %>
      <% elsif params[:view] == "stats" %>
        <% table.with_column(sort_link([:admin, @q], :bat_hits, "H")) { |instance| format_stat(instance.bat_hits, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_singles, "1B")) { |instance| format_stat(instance.bat_singles, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_doubles, "2B")) { |instance| format_stat(instance.bat_doubles, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_triples, "3B")) { |instance| format_stat(instance.bat_triples, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_hr, "HR")) { |instance| format_stat(instance.bat_hr, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :bat_xbh, "XBH")) { |instance| format_stat(instance.bat_xbh, :integer) } %>
      <% elsif params[:view] == "scouting" %>
        <% table.with_column(sort_link([:admin, @q], :bat_bat_ctrl, "BCTL")) { |instance| format_stat(instance.bat_bat_ctrl, :hundreths) } %>
      <% end %>
    <% elsif params[:player_type] == "pitcher" %>
      <% if params[:view] == "scoring" %>
        <% table.with_column(sort_link([:admin, @q], :pit_qs, "QS")) { |instance| format_stat(instance.pit_qs, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_k_9, "K/9")) { |instance| format_stat(instance.pit_k_9, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_era, "ERA")) { |instance| format_stat(instance.pit_era, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_whip, "WHIP")) { |instance| format_stat(instance.pit_whip, :hundreths) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_saves, "NR")) { |instance| format_stat(instance.pit_saves, :hundreths) } %>
      <% elsif params[:view] == "stats" %>
        <% table.with_column(sort_link([:admin, @q], :pit_inn, "INN")) { |instance| format_stat(instance.pit_inn, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_pitches, "PIT")) { |instance| format_stat(instance.pit_pitches, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_strikes, "STK")) { |instance| format_stat(instance.pit_strikes, :integer) } %>
        <% table.with_column(sort_link([:admin, @q], :pit_balls, "BALL")) { |instance| format_stat(instance.pit_balls, :integer) } %>
      <% elsif params[:view] == "scouting" %>
        <% table.with_column(sort_link([:admin, @q], :pit_control_pres, "CNTL")) { |instance| format_stat(instance.pit_control_pres, :integer) } %>
      <% end %>
    <% end %>
  <% end %>

  <%= render Admin::IndexPager::Component.new(pagy: @pagy, instance: @instance) %>
<% end %>
